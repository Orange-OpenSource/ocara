/*
 *
 * Software Name: OCARA
 *
 * SPDX-FileCopyrightText: Copyright (c) 2015-2023 Orange
 * SPDX-License-Identifier: MPL v2.0
 *
 * This software is distributed under the Mozilla Public License v. 2.0,
 * the text of which is available at http://mozilla.org/MPL/2.0/ or
 * see the "license.txt" file for more details.
 *
 */
plugins {
    id 'com.android.library'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
//    id "org.jetbrains.kotlin.kapt"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCodeValue
        versionName rootProject.ext.versionNameValue

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions 'dev'
    productFlavors {


        /**
         * dev : CI environment. See Jenkinsfile for more details about the use of this flavor.
         *
         * this variant is related to sources in src/dev/
         * - src/dev/res
         * - src/dev/google-services.json
         */
        dev {
            dimension "dev"
            buildConfigField("String", "OCARA_SERVEUR", "\"https://ocara-dev-public-conf-ocara.apps.fr01.paas.diod.orange.com/\"")
        }
        preprod {
            dimension "dev"
            buildConfigField("String", "OCARA_SERVEUR", "\"https://ocara-public-ocara.apps.fr01.paas.diod.orange.com/\"")
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

  //  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  //  implementation 'androidx.core:core-ktx:1.3.2'

    implementation project(path: ':data')
    implementation project(path: ':ActiveAndroidLib')

    implementation 'org.jetbrains:annotations:15.0'
    implementation project(path: ':utils')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation rootProject.ext.libraries.rxJava
    implementation rootProject.ext.libraries.rxAndroid
    implementation rootProject.ext.libraries.timber
    implementation rootProject.ext.libraries.gson
    implementation rootProject.ext.libraries.apacheDocx

    implementation rootProject.ext.libraries.RoomRxJava
    implementation rootProject.ext.libraries.Room
    annotationProcessor rootProject.ext.libraries.RoomAnnoatation

    implementation rootProject.ext.libraries.Hilt
    annotationProcessor rootProject.ext.libraries.HiltAnnotation

//    annotationProcessor rootProject.ext.libraries.HiltAndroidxAnnotation
//    testImplementation  rootProject.ext.libraries.HiltTesting
//    testAnnotationProcessor rootProject.ext.libraries.HiltTestAnnotation

    compileOnly  rootProject.ext.libraries.Lombok
    annotationProcessor rootProject.ext.libraries.Lombok

    // Mustache template engine
    implementation 'com.samskivert:jmustache:1.14'

   // implementation files('library/ActiveAndroid-3.1.0-SNAPSHOT.jar')


    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.1'
    // Picasso for pictures loading
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //Work Manager
    implementation rootProject.ext.libraries.WorkManager_Java
    implementation rootProject.ext.libraries.WorkManager_Kotlin

    //to use Hilt with WorkManager
    implementation rootProject.ext.libraries.Hilt_WorkManager
    // When using Kotlin.
  //  kapt rootProject.ext.libraries.Hilt_WorkManager_Kotlin
    // When using Java.
    annotationProcessor rootProject.ext.libraries.Hilt_WorkManager_Java

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
//    def work_version = "2.5.0"
//
//    // (Java only)
//    implementation "androidx.work:work-runtime:$work_version"
//
//    // Kotlin + coroutines
//    implementation "androidx.work:work-runtime-ktx:$work_version"
//
//
//
//    implementation 'androidx.hilt:hilt-work:1.0.0'
//    // When using Kotlin.
////    kapt 'androidx.hilt:hilt-compiler:1.0.0'
//    // When using Java.
//    annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0'


}